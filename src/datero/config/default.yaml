# validation schema: schema.yaml

# Connection settings for the PostgreSQL server. Could be overridden.
postgres:
  hostname: localhost
  port: 5432
  database: postgres
  username: postgres
  password: postgres


# Read-only list of available FDW extensions
fdw_list:
- file_fdw
- mongo_fdw
- mysql_fdw
- oracle_fdw
- postgres_fdw
- redis_fdw
- sqlite_fdw
- tds_fdw
- duckdb_fdw


# FDW options template
#
# fdw_options:
#   fdw_name:
#     version: x.y.z          # reference to the driver specification version. see https://github.com/chumaky/postgres-fdw-spec
#     <categories>
#     [advanced:              # advanced sections are added dynamically as part of configuration parsing.
#       <categories>]         # all non used in categories attributes from specification are considered advanced.
#
# <categories> =
#   foreign_server:
#   [- option_name
#    ...
#    - option_name]
#   user_mapping:
#   [- option_name
#    ...
#    - option_name]
#   import_foreign_schema:    # section presence, even if empty, is required to display corresponding Tab in UI
#   [- option_name
#    ...
#    - option_name]
#   create_foreign_table:
#   [- option_name
#    ...
#    - option_name]
#   foreign_table_column:
#   [- option_name
#    ...
#    - option_name]


# Read-only FDW options which define the structure of the configuration form on the UI
fdw_options:
  file_fdw:
    version: 16.2.0
    create_foreign_table:
    - filename
    - program


  mongo_fdw:
    version: 5.5.1
    foreign_server:
    - address
    - port
    - authentication_database
    user_mapping:
    - username
    - password
    # section presence, even if empty, is required to display corresponding tab in UI
    create_foreign_table:


  mysql_fdw:
    version: 2.9.1
    foreign_server:
    - host
    - port
    user_mapping:
    - username
    - password
    # section presence, even if empty, is required to display Import Schema tab in UI
    import_foreign_schema:
    create_foreign_table:
    - dbname

  oracle_fdw:
    version: 2.6.0
    foreign_server:
    - dbserver
    user_mapping:
    - user
    - password
    # section presence, even if empty, is required to display corresponding tab in UI
    import_foreign_schema:
    create_foreign_table:
    - table


  sqlite_fdw:
    version: 2.4.0
    foreign_server:
    - database
    # section presence, even if empty, is required to display corresponding tab in UI
    #
    # Note: sqlite doesn't have schemas. to support common IMPORT FOREIGN SCHEMA syntax
    # it's required to use any dummy value for a remote_schema parameter.
    # IMPORT FOREIGN SCHEMA "some_schema" FROM SERVER sqlite_server INTO public;
    # "some_schema" has no particular meaning for sqlite and can be set to an arbitrary value.
    import_foreign_schema:
    create_foreign_table:


  tds_fdw:
    version: master_2.0.3
    foreign_server:
    - servername
    - port:
        default: 1433
    - database
    user_mapping:
    - username
    - password
    # section presence, even if empty, is required to display corresponding tab in UI
    import_foreign_schema:
    create_foreign_table:
    - query
    - table_name


  postgres_fdw:
    version: 16.2.0
    foreign_server:
    - host
    - port:
        default: 5432
        data_type: integer
    - dbname:
        default: postgres
    user_mapping:
    - user:
        default: postgres
    - password:
        default: postgres

    # section presence, even if empty, is required to display corresponding tab in UI
    import_foreign_schema:
    create_foreign_table:


  redis_fdw:
    version: 16.2.0
    foreign_server:
    - address
    - port
    user_mapping:
    - password
    create_foreign_table:
    - database
    - tabletype
    - tablekeyprefix
    - tablekeyset
    - singleton_key


  duckdb_fdw:
    version: 2.1.1
    foreign_server:
    - database
    # section presence, even if empty, is required to display corresponding tab in UI
    #
    # Note: Duckdb doesn't have any custom parameters for IMPORT FOREIGN SCHEMA command.
    # To correspond to the common command syntax it's required to use any dummy value for a remote_schema parameter.
    # IMPORT FOREIGN SCHEMA "some_schema" FROM SERVER duckdb_server INTO public;
    # "some_schema" has no particular meaning for duckdb_server and can be set to an arbitrary value.
    # entry itself must be specified to enable Schema Import tab
    import_foreign_schema:
    create_foreign_table:
